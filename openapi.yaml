openapi: 3.1.0
info:
  title: ChatGPT Relay Actions
  version: "1.0.0"
  description: >
    Minimal, BIFL-grade OpenAPI schema for key ChatGPT relay endpoints.
servers:
  - url: https://chatgpt-team-relay.onrender.com/v1

paths:
  /chat/completions:
    post:
      operationId: createChatCompletion
      summary: Chat completions (primary endpoint)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model: { type: string, description: "The model name (e.g., gpt-4o)" }
                messages: { type: array, items: { type: object }, description: "Conversation history" }
      responses:
        '200':
          description: Chat completion response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  object: { type: string }
                  created: { type: integer }
                  choices: { type: array, items: { type: object } }
                  usage: { type: object }

  /models:
    get:
      operationId: listModels
      summary: List available models
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                type: object
                properties:
                  object: { type: string }
                  data:
                    type: array
                    items:
                      type: object

  /files:
    post:
      operationId: uploadFile
      summary: Upload a file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary, description: "File to upload" }
                purpose: { type: string, description: "Purpose (e.g. fine-tune)" }
      responses:
        '200':
          description: File upload response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  object: { type: string }
                  bytes: { type: integer }
                  created_at: { type: integer }
                  filename: { type: string }
                  purpose: { type: string }

  /audio/transcriptions:
    post:
      operationId: createTranscription
      summary: Transcribe audio to text
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
                model: { type: string }
      responses:
        '200':
          description: Transcription response
          content:
            application/json:
              schema:
                type: object
                properties:
                  text: { type: string }

  /images/generations:
    post:
      operationId: createImage
      summary: Image generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt: { type: string }
      responses:
        '200':
          description: Generated image
          content:
            application/json:
              schema:
                type: object
                properties:
                  created: { type: integer }
                  data:
                    type: array
                    items:
                      type: object

  /moderations:
    post:
      operationId: createModeration
      summary: Content moderation check
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input: { type: string }
      responses:
        '200':
          description: Moderation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: string }
                  model: { type: string }
                  results:
                    type: array
                    items:
                      type: object

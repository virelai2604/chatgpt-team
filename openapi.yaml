openapi: 3.0.3
info:
  title: OpenAI Relay API (BIFL-Grade)
  version: "1.0.0"
  description: >
    OpenAPI schema for all major OpenAI endpoints supported by this relay.
servers:
  - url: https://chatgpt-team-relay.onrender.com/v1

paths:
  /chat/completions:
    post:
      summary: Create chat completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model: { type: string }
                messages: { type: array, items: { type: object } }
      responses:
        '200':
          description: Chat completion
          content:
            application/json:
              schema:
                type: object

  /completions:
    post:
      summary: Create text completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model: { type: string }
                prompt: { type: string }
      responses:
        '200':
          description: Completion response
          content:
            application/json:
              schema:
                type: object

  /models:
    get:
      summary: List available models
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                type: object

  /files:
    get:
      summary: List uploaded files
      responses:
        '200':
          description: File list
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Upload a file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
                purpose: { type: string }
      responses:
        '200':
          description: File upload response
          content:
            application/json:
              schema:
                type: object

  /assistants:
    get:
      summary: List assistants
      responses:
        '200':
          description: List of assistants
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Create assistant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Assistant response
          content:
            application/json:
              schema:
                type: object

  /tools:
    get:
      summary: List tools
      responses:
        '200':
          description: List of tools
          content:
            application/json:
              schema:
                type: object

  /audio/transcriptions:
    post:
      summary: Audio transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: { type: string, format: binary }
                model: { type: string }
      responses:
        '200':
          description: Audio transcription response
          content:
            application/json:
              schema:
                type: object

  /images/generations:
    post:
      summary: Image generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt: { type: string }
      responses:
        '200':
          description: Image generation response
          content:
            application/json:
              schema:
                type: object

  /embeddings:
    post:
      summary: Create embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model: { type: string }
                input: { type: string }
      responses:
        '200':
          description: Embedding response
          content:
            application/json:
              schema:
                type: object

  /moderations:
    post:
      summary: Create moderation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input: { type: string }
      responses:
        '200':
          description: Moderation response
          content:
            application/json:
              schema:
                type: object

  /threads:
    get:
      summary: List threads
      responses:
        '200':
          description: List of threads
          content:
            application/json:
              schema:
                type: object
    post:
      summary: Create thread
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Thread response
          content:
            application/json:
              schema:
                type: object

  /vector_stores:
    get:
      summary: List vector stores
      responses:
        '200':
          description: List of vector stores
          content:
            application/json:
              schema:
                type: object

  /batch:
    post:
      summary: Create batch job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Batch response
          content:
            application/json:
              schema:
                type: object

  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object

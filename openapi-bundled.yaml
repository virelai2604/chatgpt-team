openapi: 3.1.0
info:
  title: ChatGPT Team Relay (BIFL Surface)
  version: '2025-10-24'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  description: |
    OpenAI-compatible relay exposing unified /v1/responses plus non-UI-native surfaces:
    Files/Uploads, Images, Audio, Vector Stores, and Models list.
    Legacy/sunset routes excluded. Exactly 30 operations.
servers:
  - url: https://chatgpt-team-relay.onrender.com
security:
  - BearerAuth: []
tags:
  - name: Responses
    description: Endpoints for creating and managing responses
  - name: Models
    description: Model listing
  - name: Files
    description: File operations
  - name: Uploads
    description: Upload sessions
  - name: Images
    description: Image endpoints
  - name: Audio
    description: Audio endpoints
  - name: Vector Stores
    description: Vector store endpoints
paths:
  /v1/responses:
    post:
      tags:
        - Responses
      summary: Create a model response
      operationId: createResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseCreate'
      responses:
        '200':
          description: Model response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/responses/{response_id}:
    get:
      tags:
        - Responses
      summary: Retrieve a response
      operationId: getResponse
      parameters:
        - name: response_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Responses
      summary: Delete a response
      operationId: deleteResponse
      parameters:
        - name: response_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/responses/{response_id}/cancel:
    post:
      tags:
        - Responses
      summary: Cancel a running response
      operationId: cancelResponse
      parameters:
        - name: response_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '400':
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/models:
    get:
      tags:
        - Models
      summary: List models
      operationId: listModels
      responses:
        '200':
          description: Model list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/files:
    get:
      tags:
        - Files
      summary: List files
      operationId: listFiles
      responses:
        '200':
          description: Files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      tags:
        - Files
      summary: Upload file (single-part)
      operationId: createFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              additionalProperties: false
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/files/{file_id}:
    get:
      tags:
        - Files
      summary: Get file metadata
      operationId: getFile
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Files
      summary: Delete file
      operationId: deleteFile
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/files/{file_id}/content:
    get:
      tags:
        - Files
      summary: Download file content
      operationId: getFileContent
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Raw file bytes
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/uploads:
    post:
      tags:
        - Uploads
      summary: Create upload session
      operationId: createUpload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Upload created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/uploads/{upload_id}/parts:
    post:
      tags:
        - Uploads
      summary: Upload a part
      operationId: uploadPart
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Part accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '404':
          description: Upload not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/uploads/{upload_id}/complete:
    post:
      tags:
        - Uploads
      summary: Complete upload
      operationId: completeUpload
      parameters:
        - name: upload_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/images/generations:
    post:
      tags:
        - Images
      summary: Generate image
      operationId: createImageGeneration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Image result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/images/edits:
    post:
      tags:
        - Images
      summary: Edit image
      operationId: createImageEdit
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              additionalProperties: true
      responses:
        '200':
          description: Image edit result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/images/variations:
    post:
      tags:
        - Images
      summary: Create image variations
      operationId: createImageVariation
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
              additionalProperties: true
      responses:
        '200':
          description: Variation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/audio/transcriptions:
    post:
      tags:
        - Audio
      summary: Transcribe audio
      operationId: createTranscription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              additionalProperties: true
      responses:
        '200':
          description: Transcription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/audio/translations:
    post:
      tags:
        - Audio
      summary: Translate audio
      operationId: createTranslation
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              additionalProperties: true
      responses:
        '200':
          description: Translation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/audio/speech:
    post:
      tags:
        - Audio
      summary: Text to speech
      operationId: createSpeech
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Audio stream
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores:
    get:
      tags:
        - Vector Stores
      summary: List vector stores
      operationId: listVectorStores
      responses:
        '200':
          description: Vector store list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      tags:
        - Vector Stores
      summary: Create vector store
      operationId: createVectorStore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores/{vector_store_id}:
    get:
      tags:
        - Vector Stores
      summary: Retrieve vector store
      operationId: getVectorStore
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vector store object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Vector Stores
      summary: Delete vector store
      operationId: deleteVectorStore
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores/{vector_store_id}/files:
    get:
      tags:
        - Vector Stores
      summary: List files in a vector store
      operationId: listVectorStoreFiles
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      tags:
        - Vector Stores
      summary: Add files to a vector store
      operationId: addVectorStoreFiles
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreFile'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores/{vector_store_id}/files/{file_id}:
    get:
      tags:
        - Vector Stores
      summary: Retrieve a vector store file
      operationId: getVectorStoreFile
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vector store file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreFile'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Vector Stores
      summary: Remove a file from a vector store
      operationId: deleteVectorStoreFile
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
        - name: file_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckObject'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores/{vector_store_id}/file_batches:
    get:
      tags:
        - Vector Stores
      summary: List file batches
      operationId: listVectorStoreBatches
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Batches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreFileBatchList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      tags:
        - Vector Stores
      summary: Create a file batch
      operationId: createVectorStoreBatch
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericObject'
      responses:
        '200':
          description: Batch created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreFileBatch'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /v1/vector_stores/{vector_store_id}/file_batches/{batch_id}:
    get:
      tags:
        - Vector Stores
      summary: Retrieve a file batch
      operationId: getVectorStoreBatch
      parameters:
        - name: vector_store_id
          in: path
          required: true
          schema:
            type: string
        - name: batch_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Batch detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VectorStoreFileBatch'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    ErrorObject:
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
            message:
              type: string
          required:
            - type
            - message
      required:
        - error
      additionalProperties: false
    AckObject:
      type: object
      properties:
        ok:
          type: boolean
          default: true
      required:
        - ok
      additionalProperties: false
    GenericObject:
      type: object
      properties:
        note:
          type: string
      additionalProperties: true
    AnyObject:
      type: object
      properties:
        extra:
          description: Arbitrary field to ensure non-empty schema.
          type:
            - string
            - 'null'
      additionalProperties: true
    AnyArray:
      type: array
      items:
        $ref: '#/components/schemas/AnyObject'
    JsonSchema:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AnyObject'
      additionalProperties: true
    ToolDefinition:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - function
            - code_interpreter
            - file_search
            - web_search
            - image_generation
            - browser
        function:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            parameters:
              $ref: '#/components/schemas/JsonSchema'
          additionalProperties: true
      additionalProperties: true
    ResponseCreate:
      type: object
      properties:
        model:
          type: string
        input:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/AnyObject'
            - $ref: '#/components/schemas/AnyArray'
        tools:
          type: array
          items:
            $ref: '#/components/schemas/ToolDefinition'
        stream:
          type: boolean
        temperature:
          type: number
        tool_choice:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/AnyObject'
      additionalProperties: true
    UsageMetrics:
      type: object
      properties:
        input_tokens:
          type: integer
        output_tokens:
          type: integer
        total_tokens:
          type: integer
      additionalProperties: false
    OutputItem:
      type: object
      properties:
        role:
          type: string
        content:
          type: string
      additionalProperties: true
    ResponseObject:
      type: object
      required:
        - id
        - object
      properties:
        id:
          type: string
        object:
          type: string
          default: response
        status:
          type: string
        output:
          type: array
          items:
            $ref: '#/components/schemas/OutputItem'
        usage:
          $ref: '#/components/schemas/UsageMetrics'
      additionalProperties: true
    FileObject:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          default: file
        filename:
          type: string
        bytes:
          type: integer
        created_at:
          type: integer
        purpose:
          type: string
        status:
          type: string
      required:
        - id
        - object
        - filename
      additionalProperties: true
    UploadObject:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          default: upload
        status:
          type: string
        created_at:
          type: integer
      required:
        - id
        - object
      additionalProperties: true
    VectorStoreObject:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          default: vector_store
        name:
          type: string
        created_at:
          type: integer
        status:
          type: string
        metadata:
          $ref: '#/components/schemas/AnyObject'
      required:
        - id
        - object
      additionalProperties: true
    VectorStoreFile:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          default: vector_store.file
        file_id:
          type: string
        vector_store_id:
          type: string
        status:
          type: string
      required:
        - id
        - object
      additionalProperties: true
    VectorStoreFileBatch:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
          default: vector_store.file_batch
        vector_store_id:
          type: string
        status:
          type: string
        file_counts:
          type: object
          properties:
            in_progress:
              type: integer
            completed:
              type: integer
            failed:
              type: integer
            total:
              type: integer
          additionalProperties: false
      required:
        - id
        - object
      additionalProperties: true
    VectorStoreFileBatchList:
      type: object
      properties:
        object:
          type: string
          default: list
        data:
          type: array
          items:
            $ref: '#/components/schemas/VectorStoreFileBatch'
        has_more:
          type: boolean
      required:
        - object
        - data
      additionalProperties: false
